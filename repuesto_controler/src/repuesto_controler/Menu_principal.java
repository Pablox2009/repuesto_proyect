/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package repuesto_controler;

import Conexion.conexion;
import codigo.menuCode;
import java.awt.Image;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.math.BigDecimal;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import javax.swing.ImageIcon;
import javax.swing.JScrollPane;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableColumnModel;
import modelo.menuModel;
import javax.imageio.ImageIO; // Importa ImageIO para leer imágenes
import java.io.ByteArrayInputStream;

/**
 *
 * @author Usuario
 */
public class Menu_principal extends javax.swing.JFrame {

    menuCode mc = new menuCode();
    menuModel mm = new menuModel();
    private String id = "";
    conexion a = new conexion();
     Connection conect;
    public Menu_principal() {
        this.conect = a.conectar();
        initComponents();
        mostrar_datos();
        
    }
    
    public void EmpleadosCargados(){
        DefaultTableModel model = mc.repuestos();
        tabla_repuestos.setModel(model);
        TableColumnModel columna= tabla_repuestos.getColumnModel();
        columna.getColumn(0).setMinWidth(0);
        columna.getColumn(0).setMaxWidth(0);
        columna.getColumn(1).setMinWidth(0);
        columna.getColumn(1).setMaxWidth(0);
        tabla_repuestos.addMouseListener(new MouseAdapter() {
            @Override
            public void mouseClicked(MouseEvent e) {
                int fila = tabla_repuestos.getSelectedRow();
                if (fila != -1) {
                    mm.setId(tabla_repuestos.getValueAt(fila, 0).toString());
                    mm.setId_marca(Integer.parseInt(tabla_repuestos.getValueAt(fila,1).toString()));
                    mm.setMarca(tabla_repuestos.getValueAt(fila, 2).toString());
                    mm.setNombre(tabla_repuestos.getValueAt(fila, 3).toString());
                    mm.setPrecio(tabla_repuestos.getValueAt(fila, 4).toString());
                }
            }
        });
    }
 

public void mostrar_datos() {
    DefaultTableModel modelo = new DefaultTableModel();
    modelo.addColumn("Nombre del Producto");
    modelo.addColumn("Precio");
    modelo.addColumn("Foto"); // Columna para las imágenes

    try {
        String sql = "SELECT * FROM productos";
        PreparedStatement ps = conect.prepareStatement(sql);
        ResultSet rs = ps.executeQuery();

        while (rs.next()) {
            Object[] fila = new Object[3]; // Cambia a 3 elementos
            fila[0] = rs.getString("nombre_producto");
            fila[1] = rs.getBigDecimal("precio");

            // Leer el BLOB
            byte[] blobData = rs.getBytes("foto"); // Asegúrate de que "foto" sea el nombre de la columna
            ImageIcon imageIcon = null;

            if (blobData != null) {
                try {
                    // Convertir el BLOB a ImageIcon
                    ByteArrayInputStream bis = new ByteArrayInputStream(blobData);
                    imageIcon = new ImageIcon(ImageIO.read(bis));
                } catch (Exception e) {
                    System.out.println("No se pudo cargar la imagen desde el BLOB.");
                    e.printStackTrace();
                }
            } else {
                System.out.println("El BLOB está vacío.");
            }

            fila[2] = imageIcon; // Asignar la imagen a la fila

            modelo.addRow(fila);
        }

        tabla_repuestos.setModel(modelo); // Actualizar el modelo de la tabla

        // Configurar el renderer para la columna de imágenes
        tabla_repuestos.getColumnModel().getColumn(2).setCellRenderer(new RenderImagen());

        // Establecer el ancho de las columnas
        tabla_repuestos.getColumnModel().getColumn(0).setPreferredWidth(150); // Nombre del Producto
        tabla_repuestos.getColumnModel().getColumn(1).setPreferredWidth(70); // Precio
        tabla_repuestos.getColumnModel().getColumn(2).setPreferredWidth(200); // Foto
    } catch (SQLException e) {
        e.printStackTrace();
    }
}

    


    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buscador = new javax.swing.JTextField();
        bot_añadir = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tabla_repuestos = new javax.swing.JTable();
        imprimir = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        buscador.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buscadorActionPerformed(evt);
            }
        });

        bot_añadir.setText("Añadir");
        bot_añadir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bot_añadirActionPerformed(evt);
            }
        });

        tabla_repuestos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3"
            }
        ));
        tabla_repuestos.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tabla_repuestosMouseClicked(evt);
            }
        });
        tabla_repuestos.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                tabla_repuestosKeyTyped(evt);
            }
        });
        jScrollPane1.setViewportView(tabla_repuestos);

        imprimir.setText("Imprimir");

        jLabel1.setText("Buscar");

        jButton1.setText("Modificar");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("Eliminar");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(imprimir, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(buscador, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(bot_añadir)
                                .addGap(18, 18, 18)
                                .addComponent(jButton1)
                                .addGap(18, 18, 18)
                                .addComponent(jButton2)))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(32, 32, 32)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(buscador, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 18, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(bot_añadir)
                    .addComponent(jButton1)
                    .addComponent(jButton2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(imprimir)
                .addGap(17, 17, 17))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void buscadorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buscadorActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_buscadorActionPerformed

    private void bot_añadirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bot_añadirActionPerformed
        // TODO add your handling code here:
        Pro a = new Pro();
        a.setVisible(true);
    }//GEN-LAST:event_bot_añadirActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton1ActionPerformed

    private void tabla_repuestosKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tabla_repuestosKeyTyped
        // TODO add your handling code here:
      

    }//GEN-LAST:event_tabla_repuestosKeyTyped

    private void tabla_repuestosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tabla_repuestosMouseClicked
      // tabla_repuestos.setModel(modelo); // Actualizar el modelo de la tabla

    }//GEN-LAST:event_tabla_repuestosMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Menu_principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Menu_principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Menu_principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Menu_principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Menu_principal().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton bot_añadir;
    private javax.swing.JTextField buscador;
    private javax.swing.JButton imprimir;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tabla_repuestos;
    // End of variables declaration//GEN-END:variables
}
