/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package repuesto_controler;

import Conexion.conexion;
import java.awt.Dimension;
import java.awt.Toolkit;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableColumnModel;

/**
 *
 * @author coron
 */
public class Marca extends javax.swing.JFrame {

    /**
     * Creates new form Marca
     */
     conexion a = new conexion();
     Connection conect;
    public Marca() {
        initComponents();
        this.conect = a.conectar();
        mostrardatos();
        centrar();
    }
    
    private void centrar(){
        Dimension tamaño = Toolkit.getDefaultToolkit().getScreenSize();
        int x = (tamaño.width - this.getWidth()) / 2;
        int y = (tamaño.height - this.getHeight()) / 2;
        this.setLocation(x, y);
    }

   public void mostrardatos() {
       DefaultTableModel modelo = new DefaultTableModel() {
        @Override
        public boolean isCellEditable(int row, int column) {
            // Todas las celdas no serán editables
            return false;
        }
    };

    
    
    modelo.addColumn("ID");
    modelo.addColumn("Nombre");
    TableColumnModel columna= tabla_modelo.getColumnModel();
    columna.getColumn(0).setMinWidth(0);
    columna.getColumn(0).setMaxWidth(0);

    tabla_modelo.setModel(modelo);

    String sql = "SELECT * FROM marca";
    
    try {
     
        Statement st = conect.createStatement();
        ResultSet rs = st.executeQuery(sql);
        
        while (rs.next()) {
            Object[] fila = new Object[2];
            fila[0] = rs.getInt("id_marca");
            fila[1] = rs.getString("nombre");
            modelo.addRow(fila);
        }
        
        
        rs.close();
        st.close();
    } catch (SQLException ex) {
        JOptionPane.showMessageDialog(this, "Error al mostrar los datos: " + ex.getMessage());
    }
}

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        text_marca = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        tabla_modelo = new javax.swing.JTable();
        subir = new javax.swing.JButton();
        modificar = new javax.swing.JButton();
        boton_eliminar = new javax.swing.JButton();
        boton_salir = new javax.swing.JButton();
        Marcas = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setResizable(false);

        jLabel1.setText("Marca:");

        tabla_modelo.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "Title 1", "Title 2"
            }
        ));
        tabla_modelo.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tabla_modeloMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tabla_modelo);

        subir.setBackground(new java.awt.Color(51, 255, 51));
        subir.setText("Subir");
        subir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                subirActionPerformed(evt);
            }
        });

        modificar.setBackground(new java.awt.Color(255, 255, 102));
        modificar.setText("Modificar");
        modificar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                modificarActionPerformed(evt);
            }
        });

        boton_eliminar.setBackground(new java.awt.Color(255, 51, 51));
        boton_eliminar.setForeground(new java.awt.Color(255, 255, 255));
        boton_eliminar.setText("Eliminar");
        boton_eliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                boton_eliminarActionPerformed(evt);
            }
        });

        boton_salir.setText("Salir");
        boton_salir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                boton_salirActionPerformed(evt);
            }
        });

        Marcas.setFont(new java.awt.Font("Arial", 0, 36)); // NOI18N
        Marcas.setText("Marcas");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(33, 33, 33)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(text_marca, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 199, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(Marcas, javax.swing.GroupLayout.PREFERRED_SIZE, 131, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 239, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(modificar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(subir, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(boton_eliminar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(boton_salir, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(26, 26, 26))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(Marcas)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 27, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(text_marca, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(44, 44, 44)
                        .addComponent(subir)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(modificar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(boton_eliminar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(boton_salir))
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(21, 21, 21))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void subirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_subirActionPerformed
        String nombreMarca = text_marca.getText();

        if (nombreMarca.isEmpty()) {
            JOptionPane.showMessageDialog(this, "El campo de marca no puede estar vacío.");
            return;
        }
        try {

            String sql = "INSERT INTO marca (nombre) VALUES (?)";
            PreparedStatement ps = conect.prepareStatement(sql);
            ps.setString(1, nombreMarca);
            int rowsInserted = ps.executeUpdate();
            if (rowsInserted > 0) {
                JOptionPane.showMessageDialog(this, "Marca insertada exitosamente.");
            }

            ps.close();
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(this, "Error al insertar la marca: " + ex.getMessage());
        }
        mostrardatos();
        text_marca.setText("");
      
    }//GEN-LAST:event_subirActionPerformed

    private void modificarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_modificarActionPerformed
       
        int filaSeleccionada = tabla_modelo.getSelectedRow();
        if (filaSeleccionada >= 0) {

            int idMarca = Integer.parseInt(tabla_modelo.getValueAt(filaSeleccionada, 0).toString());
            String nuevoNombre = text_marca.getText();
            if (nuevoNombre.isEmpty()) {
                JOptionPane.showMessageDialog(this, "El campo de marca no puede estar vacío.");
                return;
            }
            try {

                String sql = "UPDATE marca SET nombre = ? WHERE id_marca = ?";
                PreparedStatement ps = conect.prepareStatement(sql);
                ps.setString(1, nuevoNombre);
                ps.setInt(2, idMarca);
                int rowsUpdated = ps.executeUpdate();

                if (rowsUpdated > 0) {
                    JOptionPane.showMessageDialog(this, "Marca modificada exitosamente.");
                    mostrardatos();
                    text_marca.setText("");
                }


                ps.close();
            } catch (SQLException ex) {
                JOptionPane.showMessageDialog(this, "Error al modificar la marca: " + ex.getMessage());
            }
        } else {
            JOptionPane.showMessageDialog(this, "Debes seleccionar una fila para modificar.");
        }
    
    }//GEN-LAST:event_modificarActionPerformed

    private void tabla_modeloMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tabla_modeloMouseClicked
        int filaSeleccionada = tabla_modelo.getSelectedRow();
        if (filaSeleccionada >= 0) {
            String nombreMarca = tabla_modelo.getValueAt(filaSeleccionada, 1).toString();
            text_marca.setText(nombreMarca);
        } else {
            JOptionPane.showMessageDialog(this, "No se ha seleccionado ninguna fila.");
        }
    }//GEN-LAST:event_tabla_modeloMouseClicked

    private void boton_eliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_boton_eliminarActionPerformed
       
        int filaSeleccionada = tabla_modelo.getSelectedRow();
        if (filaSeleccionada >= 0) {
            int idMarca = Integer.parseInt(tabla_modelo.getValueAt(filaSeleccionada, 0).toString());
            int confirmacion = JOptionPane.showConfirmDialog(this, 
                "¿Estás seguro de que deseas eliminar esta marca?", 
                "Confirmar eliminación", 
                JOptionPane.YES_NO_OPTION);

            if (confirmacion == JOptionPane.YES_OPTION) {

                try {
                    String sql = "DELETE FROM marca WHERE id_marca = ?";

                    PreparedStatement ps = conect.prepareStatement(sql);
                    ps.setInt(1, idMarca);
                    int rowsDeleted = ps.executeUpdate();

                    if (rowsDeleted > 0) {
                        JOptionPane.showMessageDialog(this, "Marca eliminada exitosamente.");
                        mostrardatos();
                         text_marca.setText("");
                    }
                    ps.close();
                } catch (SQLException ex) {
                    JOptionPane.showMessageDialog(this, "Error al eliminar la marca: " + ex.getMessage());
                }
            }
        } else {
            JOptionPane.showMessageDialog(this, "Debes seleccionar una fila para eliminar.");
        }
    }//GEN-LAST:event_boton_eliminarActionPerformed

    private void boton_salirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_boton_salirActionPerformed
        Menu_principal mp = new Menu_principal();
        mp.setVisible(true);
        dispose();
    }//GEN-LAST:event_boton_salirActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Marca.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Marca.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Marca.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Marca.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Marca().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel Marcas;
    private javax.swing.JButton boton_eliminar;
    private javax.swing.JButton boton_salir;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton modificar;
    private javax.swing.JButton subir;
    private javax.swing.JTable tabla_modelo;
    private javax.swing.JTextField text_marca;
    // End of variables declaration//GEN-END:variables
}
